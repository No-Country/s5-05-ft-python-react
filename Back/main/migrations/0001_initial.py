# Generated by Django 4.1.3 on 2022-11-29 00:38

import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_jugador', models.BooleanField(default=False)),
                ('is_complejo', models.BooleanField(default=False)),
                ('fecha_ingreso', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Jugador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('rol', models.CharField(choices=[('D', 'Drive'), ('R', 'Revés'), ('A', 'Ambos')], default='A', max_length=1)),
                ('nivel', models.SmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)], null=True)),
                ('telefono', models.CharField(help_text='Número sin 0 ni 15', max_length=10)),
                ('lunes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=[], size=None)),
                ('martes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=[], size=None)),
                ('miercoles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=[], size=None)),
                ('jueves', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=[], size=None)),
                ('viernes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=[], size=None)),
                ('sabado', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=[], size=None)),
                ('domingo', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=[], size=None)),
                ('cancha_specs', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('T', 'Techada'), ('AL', 'Aire Libre'), ('SC', 'Superficie Cemento'), ('SS', 'Superficie Sintetico'), ('PC', 'Pared Cemento'), ('PB', 'Pared Blindex')], max_length=30, null=True)),
                ('editado', models.DateTimeField(auto_now=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Jugador', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Jugador',
                'verbose_name_plural': 'Jugadores',
                'ordering': ['-editado', '-creado'],
            },
        ),
        migrations.CreateModel(
            name='Complejo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('pais', models.CharField(max_length=155, verbose_name='Pais')),
                ('ciudad', models.CharField(max_length=155, verbose_name='Ciudad')),
                ('calle', models.CharField(max_length=155)),
                ('altura', models.IntegerField(blank=True, null=True)),
                ('cant_cancha', models.IntegerField(default=1)),
                ('cancha_specs', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('T', 'Techada'), ('AL', 'Aire Libre'), ('SC', 'Superficie Cemento'), ('SS', 'Superficie Sintetico'), ('PC', 'Pared Cemento'), ('PB', 'Pared Blindex')], max_length=30, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Complejo',
                'verbose_name_plural': 'Complejos',
            },
        ),
    ]
